<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.1 (Python 3.7.7 on win32)" generated="20230922 17:51:17.620" rpa="false" schemaversion="3">
<suite id="s1" name="gRPC Testing" source="C:\Users\gouthama\Desktop\Titan\Sep2023\gRPC_Titan\TestSuites\NASAGUI\gRPC_Testing.robot">
<kw name="Suite Setup Demo" library="gRPC Gui-Library" type="SETUP">
<kw name="Log" library="BuiltIn">
<arg>Suite Setup Demo is executed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 17:51:18.464" level="INFO">Suite Setup Demo is executed</msg>
<status status="PASS" starttime="20230922 17:51:18.464" endtime="20230922 17:51:18.464"/>
</kw>
<status status="PASS" starttime="20230922 17:51:18.463" endtime="20230922 17:51:18.464"/>
</kw>
<test id="s1-t1" name="Testcase1" line="15">
<kw name="test setup demo" library="gRPC Gui-Library" type="SETUP">
<kw name="Log" library="BuiltIn">
<arg>the test setup demo keyword is executed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 17:51:18.468" level="INFO">the test setup demo keyword is executed</msg>
<status status="PASS" starttime="20230922 17:51:18.466" endtime="20230922 17:51:18.468"/>
</kw>
<status status="PASS" starttime="20230922 17:51:18.465" endtime="20230922 17:51:18.468"/>
</kw>
<kw name="Transfer File With Specified Location Using gRPC Protocol Via" library="gRPC Gui-Library">
<var>${status}</var>
<arg>2</arg>
<arg>${VM1}</arg>
<arg>${VM2}</arg>
<arg>${gRPC_Sender_Command_Transfer_File_With_Specified_Location}</arg>
<arg>${gRPC_Receiver_Command_Transfer_File_With_Specified_Location}</arg>
<arg>${Sender_Output_Check}</arg>
<arg>${Receiver_Output_Check}</arg>
<arg>${VMpath}</arg>
<kw name="Connect To VM" library="gRPC Gui-Library">
<var>${output1}</var>
<arg>${Host2}</arg>
<arg>${Receiver_Command}</arg>
<arg>${VMpath}</arg>
<kw name="Open Connection" library="SSHLibrary">
<arg>${Host}[0]</arg>
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<status status="PASS" starttime="20230922 17:51:18.470" endtime="20230922 17:51:18.471"/>
</kw>
<kw name="Login" library="SSHLibrary">
<arg>${Host}[1]</arg>
<arg>${Host}[2]</arg>
<arg>delay=10</arg>
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<msg timestamp="20230922 17:51:18.472" level="INFO">Logging into '192.168.29.11:22' as 'admin'.</msg>
<msg timestamp="20230922 17:51:28.626" level="INFO">Read output: Activate the web console with: systemctl enable --now cockpit.socket

Last login: Fri Sep 22 08:17:54 2023 from 192.168.29.98
[admin@gRPCreceiver ~]$</msg>
<status status="PASS" starttime="20230922 17:51:18.471" endtime="20230922 17:51:28.626"/>
</kw>
<kw name="Write" library="SSHLibrary">
<var>${stdout}</var>
<arg>${VMpath}</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20230922 17:51:28.630" level="INFO">cd /home/admin/project/bin</msg>
<msg timestamp="20230922 17:51:28.630" level="INFO">${stdout} = cd /home/admin/project/bin
</msg>
<status status="PASS" starttime="20230922 17:51:28.626" endtime="20230922 17:51:28.630"/>
</kw>
<kw name="Write" library="SSHLibrary">
<var>${p}</var>
<arg>pwd</arg>
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<msg timestamp="20230922 17:51:28.634" level="INFO">[admin@gRPCreceiver bin]$ pwd</msg>
<msg timestamp="20230922 17:51:28.634" level="INFO">${p} = [admin@gRPCreceiver bin]$ pwd
</msg>
<status status="PASS" starttime="20230922 17:51:28.630" endtime="20230922 17:51:28.634"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${p}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20230922 17:51:28.634" endtime="20230922 17:51:28.635"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${command}</var>
<arg>./grpc_sender -D -s 192.168.29.141:50051 -f test.txt -v 1 -b 1MB -o /tmp</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230922 17:51:28.637" level="INFO">${command} = ./grpc_sender -D -s 192.168.29.141:50051 -f test.txt -v 1 -b 1MB -o /tmp</msg>
<status status="PASS" starttime="20230922 17:51:28.635" endtime="20230922 17:51:28.637"/>
</kw>
<kw name="Run Process" library="Process">
<var>${output}</var>
<arg>ssh username@192.168.29.141 bash -c '${command}'</arg>
<doc>Runs a process and waits for it to complete.</doc>
<msg timestamp="20230922 17:51:28.638" level="INFO">Starting process:
"ssh username@192.168.29.141 bash -c './grpc_sender -D -s 192.168.29.141:50051 -f test.txt -v 1 -b 1MB -o /tmp'"</msg>
<msg timestamp="20230922 17:51:28.640" level="FAIL">FileNotFoundError: [WinError 2] The system cannot find the file specified</msg>
<status status="FAIL" starttime="20230922 17:51:28.637" endtime="20230922 17:51:28.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230922 17:51:28.641" endtime="20230922 17:51:28.641"/>
</kw>
<kw name="List Directory" library="SSHLibrary">
<var>${zip_file}</var>
<arg>/home/admin/project/bin</arg>
<doc>Returns and logs items in the remote ``path``, optionally filtered with ``pattern``.</doc>
<status status="NOT RUN" starttime="20230922 17:51:28.641" endtime="20230922 17:51:28.641"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${zip_file}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20230922 17:51:28.641" endtime="20230922 17:51:28.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${stdout}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230922 17:51:28.642" endtime="20230922 17:51:28.642"/>
</kw>
<status status="FAIL" starttime="20230922 17:51:18.470" endtime="20230922 17:51:28.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output1}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230922 17:51:28.642" endtime="20230922 17:51:28.642"/>
</kw>
<kw name="Connect To VM" library="gRPC Gui-Library">
<var>${output2}</var>
<arg>${Host1}</arg>
<arg>${Sender_Command}</arg>
<arg>${VMpath}</arg>
<status status="NOT RUN" starttime="20230922 17:51:28.642" endtime="20230922 17:51:28.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output2}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230922 17:51:28.642" endtime="20230922 17:51:28.642"/>
</kw>
<kw name="Connect To VM" library="gRPC Gui-Library">
<var>${output3}</var>
<arg>${Host2}</arg>
<arg>ls</arg>
<arg>cd /tmp</arg>
<status status="NOT RUN" starttime="20230922 17:51:28.642" endtime="20230922 17:51:28.642"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output3}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230922 17:51:28.642" endtime="20230922 17:51:28.642"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Should Contain</arg>
<arg>${output1}</arg>
<arg>${Sender_Check_Value}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20230922 17:51:28.642" endtime="20230922 17:51:28.642"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${status}</var>
<arg>Should Contain</arg>
<arg>${output2}</arg>
<arg>${Receiver_Check_Value}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20230922 17:51:28.642" endtime="20230922 17:51:28.642"/>
</kw>
<status status="FAIL" starttime="20230922 17:51:18.469" endtime="20230922 17:51:28.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${status}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230922 17:51:28.643" endtime="20230922 17:51:28.643"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${status}' == '${False}'</arg>
<arg>fail</arg>
<arg>Test case is Failed</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20230922 17:51:28.643" endtime="20230922 17:51:28.643"/>
</kw>
<kw name="test teardown demo" library="gRPC Gui-Library" type="TEARDOWN">
<kw name="Log" library="BuiltIn">
<arg>the test teardown keyword is executed</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230922 17:51:28.644" level="INFO">the test teardown keyword is executed</msg>
<status status="PASS" starttime="20230922 17:51:28.644" endtime="20230922 17:51:28.644"/>
</kw>
<status status="PASS" starttime="20230922 17:51:28.644" endtime="20230922 17:51:28.644"/>
</kw>
<doc>DESIGN STEPS

============


gRPC Tool Testing Using Automation

Step1:

Login to VM.

Step 2:

Execute the gRPC Command.

Step 3:

Check the eexcuted command is success or fail

Step4:

Compare Result with expected Result.

*ASSIGNEE=#####*</doc>
<tag>DEMO</tag>
<tag>GRPC</tag>
<tag>netactgui</tag>
<timeout value="15 minutes"/>
<status status="FAIL" starttime="20230922 17:51:18.464" endtime="20230922 17:51:28.644">FileNotFoundError: [WinError 2] The system cannot find the file specified</status>
</test>
<kw name="Suite Teardown Demo" library="gRPC Gui-Library" type="TEARDOWN">
<kw name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" starttime="20230922 17:51:28.645" endtime="20230922 17:51:28.647"/>
</kw>
<status status="PASS" starttime="20230922 17:51:28.645" endtime="20230922 17:51:28.647"/>
</kw>
<status status="FAIL" starttime="20230922 17:51:17.624" endtime="20230922 17:51:28.647"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">DEMO</stat>
<stat pass="0" fail="1" skip="0">GRPC</stat>
<stat pass="0" fail="1" skip="0">netactgui</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="gRPC Testing">gRPC Testing</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
